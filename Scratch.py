# ======================================================================================================================
# Script Name: Scratch.py
# File Name: Three_Phase_Final
# Date: 06-09-2022
# Creator: K.N. Lambrecht
# Purpose: This script is used for solution of the system of ODEs and the optimisation of parameters
# ======================================================================================================================

from Main_Script import *
from Function import *
import time
import numpy as np
from tabulate import tabulate

x1 = np.array([9.69999592e-06, 8.99746699e-04, 5.92686895e-06, 4.34850450e-03, 2.59961095e+00, 1.14338137e+00,
               2.48601232e-01, 9.38305186e-01, 4.99791328e+00, 9.99999036e-01, 4.99909754e+00, 9.99176165e-01,
               2.28433890e-02, 1.00535109e-02, 4.99266074e-02, 4.99679020e-02, 1.45812375e-02, 1.00000000e-02,
               2.00000000e-02, 7.05198834e-03, 2.01710292e-04, 6.74042266e-02, 1.00233987e-03, 1.43731037e-03,
               4.17458028e-04, 9.87838378e-04, 9.99980245e-05, 2.76422792e-04, 1.13605137e-03, 9.97874564e-04,
               1.49999034e-04, 2.49987304e-06, 4.83816883e-02, 5.04166234e-04, 1.10107901e-02, 5.21898546e-03])

x2 = np.array([9.69999487e-06, 8.13324583e-04, 5.98728248e-06, 6.20528715e-03, 1.43892220e+00, 1.60343183e+00,
               2.55455183e-01, 9.60036895e-01, 4.99733061e+00, 1.00000000e+00, 4.99987913e+00, 9.94355453e-01,
               2.35430361e-02, 1.00697518e-02, 4.29704154e-02, 1.04245595e-02, 1.67791972e-02, 1.00000000e-02,
               2.00000000e-02, 9.34755737e-03, 4.99999987e-04, 6.09439885e-02, 1.03320336e-03, 2.74564403e-03,
               3.03342665e-04, 9.99459547e-04, 9.99996227e-05, 3.49855451e-04, 1.00199793e-03, 9.97140701e-04,
               1.49998633e-04, 2.49999165e-06, 4.99994525e-02, 5.01216955e-04, 1.10107901e-02, 1.23906480e-02])

x3 = np.array([9.50000016e-06, 9.99999807e-04, 5.02320088e-06, 1.51812496e-02, 4.82544380e+00, 4.99962507e+00,
               4.99954548e+00, 3.51647972e-05, 4.73906409e+00, 1.43104691e-02, 1.57909205e-01, 9.99447420e-01,
               3.00053296e-02, 2.00180085e-02, 3.00001976e-02, 2.00136642e-02, 2.00022637e-02, 1.00000000e-02,
               2.00000000e-02, 5.30963898e-03, 4.96828842e-04, 9.99740903e-02, 1.06492047e-03, 1.19084705e-03,
               5.86569353e-05, 5.02107970e-04, 5.00024089e-05, 4.87363410e-04, 3.11807113e-03, 9.83768815e-04,
               1.49999338e-04, 1.50948913e-06, 4.98906003e-02, 1.36717869e-03, 1.10107901e-02, 1.49997289e-02])

x4 = np.array([9.68239589e-06, 5.00002142e-04, 5.49301052e-06, 3.70836800e-01, 8.22386840e-01, 5.00000000e+00,
               3.59760733e-01, 9.54310534e-01, 3.53971979e-01, 6.73986408e-03, 2.14126956e+00, 9.07234515e-01,
               3.00280325e-02, 2.00390252e-02, 2.99542453e-02, 1.99755204e-02, 1.99716333e-02, 1.00000000e-02,
               2.00000000e-02, 5.00047887e-03, 4.15100909e-04, 8.51991714e-02, 1.04600889e-03, 4.65859506e-03,
               9.96802313e-05, 5.84606505e-04, 7.00149962e-05, 1.01067700e-04, 2.00850437e-03, 8.46093528e-04,
               1.00189666e-04, 2.00006218e-06, 2.34777009e-02, 1.86414556e-03, 1.10107901e-02, 1.15814785e-02])

x5 = np.array([9.69999283e-06, 6.73030221e-04, 5.00001270e-06, 3.36773403e-05, 3.41969669e+00, 1.02564735e+00,
               1.78871258e-01, 7.58975806e-01, 4.99677554e+00, 9.93599742e-01, 4.99794733e+00, 1.00000000e+00,
               4.06088524e-02, 4.06575211e-02, 4.99974933e-02, 1.17066016e-02, 1.25424982e-02, 1.00000000e-02,
               2.00000000e-02, 1.44656548e-02, 4.31329618e-04, 5.36383256e-02, 1.30237284e-03, 4.94574368e-03,
               4.89733383e-04, 9.88719565e-04, 9.99865037e-05, 3.25031176e-04, 4.42833546e-03, 9.13476833e-04,
               1.30881931e-04, 2.49979246e-06, 2.92908633e-02, 6.33222932e-04, 1.10107901e-02, 1.24644654e-02])

x6 = np.array([9.69999994e-06, 9.44274909e-04, 5.00004444e-06, 1.58681575e-04, 4.99774244e+00, 1.00000091e+00,
               5.10440423e-01, 2.18114034e-02, 4.99983242e+00, 1.00000000e+00, 3.79938038e+00, 9.99522193e-01,
               4.91465280e-02, 4.72560561e-02, 4.99907222e-02, 1.05936475e-02, 1.66606654e-02, 1.00000000e-02,
               2.00000000e-02, 1.50000000e-02, 4.99883330e-04, 5.00142508e-02, 1.06166321e-03, 1.38733703e-03,
               4.95096114e-04, 9.22655848e-04, 8.37406594e-05, 3.84537848e-04, 4.99922058e-03, 9.98041701e-04,
               1.49999246e-04, 2.48591101e-06, 4.99947354e-02, 7.62933720e-04, 1.10107901e-02, 1.49986719e-02])

x7 = np.array([9.65308397e-06, 8.21569470e-04, 5.49997862e-06, 3.98197083e-01, 8.15811444e-01, 4.55220964e+00,
               3.60006855e-01, 9.99401012e-01, 5.27027977e-01, 9.99872301e-01, 2.13996305e+00, 9.95453054e-01,
               3.00000008e-02, 2.00000013e-02, 3.00000005e-02, 2.00000008e-02, 2.00000007e-02, 1.00000000e-02,
               2.00000000e-02, 9.75280023e-03, 4.01494803e-04, 8.07347028e-02, 1.99999999e-03, 4.07594121e-03,
               1.00609988e-04, 8.17934203e-04, 7.00000008e-05, 3.63291251e-04, 2.01204882e-03, 8.46084836e-04,
               1.02855699e-04, 1.99999182e-06, 2.05933811e-02, 9.99998452e-04, 1.10107901e-02, 1.10847924e-02])

x8 = np.array([9.69999997e-06, 7.85197590e-04, 5.99999992e-06, 4.99999638e-01, 5.00000000e+00, 1.01867780e+00,
               2.92106955e-01, 1.77845540e-01, 3.90247038e+00, 1.00000000e+00, 2.90348909e+00, 8.06632309e-01,
               4.99999243e-02, 4.99999978e-02, 4.99889584e-02, 4.99999149e-02, 1.96197807e-02, 1.00000000e-02,
               2.00000000e-02, 6.02019577e-03,  2.01297087e-04, 5.00465181e-02, 1.00000000e-03, 1.65629512e-03,
               4.63668634e-04, 9.99998238e-04, 5.49154794e-05, 2.47987861e-04, 4.99999989e-03, 9.99999578e-04,
               1.48964983e-04, 2.49999990e-06, 4.99944303e-02, 5.00000055e-04, 1.10107901e-02, 5.00003869e-03])

x9 = np.array([9.69629258e-06, 5.16326409e-04, 5.98292850e-06, 5.49239584e-02, 4.85331419e+00, 1.33521066e+00,
               4.42779855e+00, 9.22176874e-01, 1.58410043e-02, 8.84225424e-01, 1.39992027e-01, 9.58737701e-01,
               3.00001732e-02, 2.00003214e-02, 3.00001642e-02, 2.00003916e-02, 2.00000856e-02, 1.00000000e-02,
               2.00000000e-02, 5.61736216e-03, 2.07046212e-04, 5.36138921e-02, 1.23547376e-03, 4.92240826e-03,
               5.19973627e-05, 9.52783400e-04, 8.94300826e-05, 1.59967651e-04, 4.89130244e-03, 5.83456960e-04,
               1.48218687e-04, 2.39248233e-06, 4.89534845e-02, 9.88349600e-04, 1.10107901e-02, 1.48567435e-02])

param_cs_20 = vector_to_namespace(x1, p.param_names_reg)
param_cs_25 = vector_to_namespace(x2, p.param_names_reg)
param_cs_28 = vector_to_namespace(x3, p.param_names_reg)
param_sh_20 = vector_to_namespace(x4, p.param_names_reg)
param_sh_25 = vector_to_namespace(x5, p.param_names_reg)
param_sh_28 = vector_to_namespace(x6, p.param_names_reg)
param_me_20 = vector_to_namespace(x7, p.param_names_reg)
param_me_25 = vector_to_namespace(x8, p.param_names_reg)
param_me_28 = vector_to_namespace(x9, p.param_names_reg)

print(tabulate([['CS 20', param_cs_20], ['CS 25', param_cs_25], ['CS 28', param_cs_28], ['SH 20', param_sh_20],
                ['SH 25', param_sh_25], ['SH 28', param_sh_28], ['ME 20', param_me_20], ['ME 25', param_me_25],
                ['ME 28', param_me_28]], headers=['Ferment', 'Parameters']))
